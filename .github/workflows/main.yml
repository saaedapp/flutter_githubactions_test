---
name: Flutter CI CD
on:
  push:
    branches:
      - main
jobs:
  flutter_test:
    name: Run flutter test and analyze
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: oracle
          java-version: "17"
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.0
          channel: stable
      - name: Install Dependencies
        run: flutter pub get

#      - name: Install iOS dependencies
#        run: |
#          cd ios
#          pod install --repo-update
#          cd ..
          

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'  # Use a compatible Ruby version for Fastlane


      - name: Install Apple Certificate
        env:
           IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
           IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
        run: |
            echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > ios_certificate.p12
            security create-keychain -p "" build.keychain
            security import ios_certificate.p12 -t agg -k ~/Library/Keychains/build.keychain -P "$IOS_CERTIFICATE_PASSWORD" -A
            security list-keychains -s ~/Library/Keychains/build.keychain
            security default-keychain -s ~/Library/Keychains/build.keychain
            security set-keychain-settings -lut 21600
            security unlock-keychain -p "" ~/Library/Keychains/build.keychain

      - name: Install Provisioning Profile
        env:
          IOS_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "PROVISIONING_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/provisioning.mobileprovision

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS Release
        run: flutter build ipa --release

      - name: Upload IPA to TestFlight
        env:
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        run: |
          echo "$APP_STORE_CONNECT_KEY" | base64 --decode > AuthKey.p8
          xcrun altool --upload-app -f build/ios/ipa/*.ipa \
          --type ios \
          --apiKey "$APP_STORE_CONNECT_KEY_ID" \
          --apiIssuer "$APP_STORE_CONNECT_ISSUER_ID"
