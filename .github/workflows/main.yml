---
name: Flutter CI CD
on:
  push:
    branches:
      - main
jobs:
  flutter_test:
    name: Run flutter test and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: oracle
          java-version: "17"
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.0
          channel: stable
      - name: Install Dependencies
        run: flutter pub get
      - name: Decode Keystore
        run: >
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode >
          android/app/keystore.jks
      - name: Create key.properties
        run: >
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >
          android/key.properties

          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties

          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build APK
        run: flutter build apk --release
      - name: Build appBundle
        run: flutter build appbundle


      - name: Rename APK with Date
        run: |
          DATE=$(date +'%Y-%m-%d')
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-dev-release-$DATE.apk
          echo "NEW_DEV_APK_NAME=app-dev-release-$DATE.apk" >> $GITHUB_ENV

      - name: Upload Dev APK
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.GDRIVE_SERVICE_ACCOUNT_KEY }}
          filename: build/app/outputs/flutter-apk/${{ env.NEW_DEV_APK_NAME }}
          overwrite: true
          

#      - name: Upload Artifacts
#        uses: actions/upload-artifact@main
#        with:
#          name: Releases
#          path: |
#            build/app/outputs/flutter-apk/app-release.apk
#            build/app/outputs/bundle/release/app-release.aab
#            build/ios_build.tar.g
#
#
#      - name: Extract version from pubspec.yaml
#        id: extract_version
#        run: >
#          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
#
#          echo "VERSION=$version" >> $GITHUB_ENV
#
#
#      - name: Create Release
#        uses: ncipollo/release-action@v1
#        with:
#            artifacts: build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab,build/ios_build.tar.gz
#            tag: v${{ env.VERSION }}
#            token: ${{ secrets.TOKEN }}