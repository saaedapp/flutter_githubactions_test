---
name: Flutter CI CD
on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
#      - name: Set Up Java
#        uses: actions/setup-java@v3.12.0
#        with:
#          distribution: oracle
#          java-version: "17"
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.0
          channel: stable
          architecture: x64



      - name: Install Dependencies
        run: flutter pub get

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
            ruby-version: '3.0'
            bundler-cache: true

      - name: Install CocoaPods
        run: |
             cd ios
             pod install

      - name: Enable Automatic Signing in Xcode
        run: |
          mkdir -p ~/Library/Developer/Xcode/UserData/
          echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
          <plist version=\"1.0\">
          <dict>
            <key>DisableAutomaticSigning</key>
            <false/>
           </dict>
          </plist>" > ~/Library/Developer/Xcode/UserData/IDETemplateMacros.plist

      - name: Configure Xcode Project for Automatic Signing
        run: |
          sudo gem install xcodeproj
          ruby -e "
            require 'xcodeproj';
            project_path = 'ios/Runner.xcodeproj';
            project = Xcodeproj::Project.open(project_path);
            project.targets.each do |target|
              target.build_configurations.each do |config|
                config.build_settings['CODE_SIGN_STYLE'] = 'Automatic'
                config.build_settings['DEVELOPMENT_TEAM'] = '${{ secrets.APPLE_TEAM_ID }}'
              end
            end;
            project.save;
          "
      - name: Install Apple Certificate
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}

      - name: Build iOS IPA
        run: |
              cd ios
              xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release archive -archivePath build/Runner.xcarchive
              xcodebuild -exportArchive -archivePath build/Runner.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath build/ios/ipa


      - name: Deploy to App Store
        uses: apple-actions/upload-testflight-build@v1
        with:
            app-path:  "ios/build/ios/ipa/Runner.ipa"
            api-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
            api-private-key: ${{ secrets.APP_STORE_CONNECT_KEY }}
            api-key-issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}