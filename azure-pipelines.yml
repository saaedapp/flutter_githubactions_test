# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.


trigger:
  - main  # Change this to your main branch name

pool:
  vmImage: 'ubuntu-latest'  # Use 'windows-latest' if needed

steps:
  - task: FlutterInstall@0
    displayName: "Install Flutter"
    inputs:
      mode: 'auto'
      channel: 'stable'
      version: '3.22.0'

  - script: |
      flutter doctor -v
#  - script: |
#      sudo apt-get update -qq
#      sudo apt-get install -y curl unzip xz-utils
#      curl -LO https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.13.0-stable.tar.xz
#      tar -xf flutter_linux_3.13.0-stable.tar.xz
#      echo "##vso[task.setvariable variable=FLUTTER_HOME]$(pwd)/flutter"
#      echo "##vso[task.setvariable variable=PATH]$(FLUTTER_HOME)/bin:$(PATH)"
#      flutter doctor
#    displayName: 'Install Flutter'

  - script: flutter pub get
    displayName: 'Install flutter Dependencies'

  - task: JavaToolInstaller@1
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: FlutterBuild@0
    displayName: 'Build Android APK'
    inputs:
      target: 'apk'
      projectDirectory: '.'
#  - script: flutter build apk --release
#    displayName: 'Build Android APK'

  - task: PublishBuildArtifacts@1
    displayName: 'Upload APK to Artifacts'
    inputs:
      pathToPublish: 'build/app/outputs/flutter-apk/app-release.apk'
      artifactName: 'android-apk'
